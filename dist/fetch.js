"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.fetchApiSync=exports.fetchApi=exports.fetchDataSync=exports.fetchData=void 0;const useHttp=(global.origin||"").startsWith("http"),fetchData=async(t,e,a)=>{const s=t.startsWith("http"),c=global.nextron;if(null==c||s||useHttp){const c=s?t:`${global.origin}${`/${t}`.replace(/\/\//g,"/")}`,o=await fetch(c,{method:a?.method??"POST",headers:{"Content-Type":"application/json",...a?.headers},body:JSON.stringify(e??{})});if(!o.ok)throw new Error(`fetchData failed: ${c}`);return await o.json()}return await c.fetch(t,e??{},a)};exports.fetchData=fetchData;const fetchDataSync=(t,e,a,s)=>{(async()=>{const c=await(0,exports.fetchData)(t,e,a);s?.(c)})()};exports.fetchDataSync=fetchDataSync;const fetchApi=async(t,e,a)=>{const s=await(0,exports.fetchData)(`/api/${t}`,e,a),c=s.data,o=Array.isArray(s.messages)?s.messages:[];return{data:c,messages:o,hasInformation:o.some((t=>"info"===t.type)),hasWarning:o.some((t=>"warn"===t.type)),hasError:o.some((t=>"err"===t.type))}};exports.fetchApi=fetchApi;const fetchApiSync=(t,e,a,s)=>{(async()=>{const c=await(0,exports.fetchApi)(t,e,a);s?.(c)})()};exports.fetchApiSync=fetchApiSync;